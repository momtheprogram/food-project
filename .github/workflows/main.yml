name: Foodgram workflow
on:
  push:
    branches:
      - master

jobs:
#  tests:
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:13.10
#        env:
#          POSTGRES_USER: foodgram_user
#          POSTGRES_PASSWORD: foodgram_password
#          DB_NAME: foodgram
#        ports:
#          - 5432:5432
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.10.12
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
#          pip install -r foodgram/requirements.txt
#      - name: Test with flake8 and django tests
#        env:
#          POSTGRES_USER: foodgram_user
#          POSTGRES_PASSWORD: foodgram_password
#          DB_NAME: foodgram
#          # Сервер БД запущен в Docker, но его порт проброшен на хост
#          # Поэтому подключаемся к 127.0.0.1:5432
#          DB_HOST: 127.0.0.1
#          DB_PORT: 5432
#        run: |
#          python -m flake8 foodgram/

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./foodgram/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  build_nginx_and_push_to_docker_hub:
    name: Push nginx Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./infra/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_nginx:latest
  deploy:
    runs-on: ubuntu-latest
    needs:
        - build_and_push_to_docker_hub
        - build_frontend_and_push_to_docker_hub
        - build_nginx_and_push_to_docker_hub
    steps:
        - name: Checkout repo
          uses: actions/checkout@v3
        - name: Copy docker-compose.yml via ssh
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            source: "docker-compose.yml"
            target: "foodgram"
        - name: Executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            script: |
              cd foodgram
              sudo docker compose -f docker-compose.production.yml pull
              sudo docker compose -f docker-compose.production.yml down
              sudo docker compose -f docker-compose.production.yml up -d
              sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
              sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
              sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/backend_static/. /backend_static/backend_static/
